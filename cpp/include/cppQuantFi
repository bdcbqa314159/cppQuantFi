#ifndef CPPQUANTFI_H
#define CPPQUANTFI_H

#include "cppQuantFi_bits/intro.hpp"
#include "cppQuantFi_bits/norm.hpp"
#include "cppQuantFi_bits/vanillaOption.hpp"
#include "cppQuantFi_bits/payoff.hpp"
#include "cppQuantFi_bits/payoffCall.hpp"
#include "cppQuantFi_bits/payoffPut.hpp"
#include "cppQuantFi_bits/payoffDoubleDigital.hpp"
#include "cppQuantFi_bits/matrix.hpp"
#include "cppQuantFi_bits/functors.hpp"
#include "cppQuantFi_bits/qsMatrix.hpp"
#include "cppQuantFi_bits/thomasAlgorithm.hpp"
#include "cppQuantFi_bits/eurOptionBSMC.hpp"
#include "cppQuantFi_bits/pathGeneration.hpp"
#include "cppQuantFi_bits/asian.hpp"
#include "cppQuantFi_bits/bsCall.hpp"
#include "cppQuantFi_bits/intervalBisection.hpp"
#include "cppQuantFi_bits/newtonRaphson.hpp"
#include <eigen3/Eigen/Dense>
#include <eigen3/Eigen/LU>

#endif
